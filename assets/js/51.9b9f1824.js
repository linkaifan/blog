(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{208:function(a,t,e){"use strict";e.r(t);var r=e(0),v=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"小程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小程序","aria-hidden":"true"}},[a._v("#")]),a._v(" 小程序")]),a._v(" "),e("p",[a._v("分别由2个线程管理：")]),a._v(" "),e("ol",[e("li",[a._v("渲染层：WebView,一个小程序存在多个界面，所以渲染层存在多个WebView线程")]),a._v(" "),e("li",[a._v("逻辑层：JSCore,没有完整的浏览器对象，故缺少dom，bom等相关API。又因为与node环境不尽相同，一些npm包也无法运行。")])]),a._v(" "),e("h2",{attrs:{id:"三大运行环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三大运行环境","aria-hidden":"true"}},[a._v("#")]),a._v(" 三大运行环境")]),a._v(" "),e("ol",[e("li",[a._v("IOS")]),a._v(" "),e("li",[a._v("安卓")]),a._v(" "),e("li",[a._v("开发者工具")])]),a._v(" "),e("h2",{attrs:{id:"js执行顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js执行顺序","aria-hidden":"true"}},[a._v("#")]),a._v(" js执行顺序")]),a._v(" "),e("p",[a._v("当 app.js 执行结束后，小程序会按照开发者在 app.json 中定义的 pages 的顺序，逐一执行。")]),a._v(" "),e("h2",{attrs:{id:"渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染","aria-hidden":"true"}},[a._v("#")]),a._v(" 渲染")]),a._v(" "),e("ol",[e("li",[a._v("渲染层和数据相关。")]),a._v(" "),e("li",[a._v("逻辑层负责产生、处理数据。")]),a._v(" "),e("li",[a._v("逻辑层通过 Page 实例的 setData 方法传递数据到渲染层。“通信模型”。")])]),a._v(" "),e("ul",[e("li",[a._v("通信模型: 这两个线程的通信会经由微信客户端（下文中也会采用Native来代指微信客户端）做中转，逻辑层发送网络请求也经由Native转发，")])]),a._v(" "),e("h2",{attrs:{id:"数据驱动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据驱动")]),a._v(" "),e("p",[a._v("WXML结构实际上等价于一棵Dom树，通过一个JS对象也可以来表达Dom树的结构。WXML可以先转成JS对象，然后再渲染出真正的Dom树。通过setData把msg数据从“Hello World”变成“Goodbye”，产生的JS对象对应的节点就会发生变化，此时可以对比前后两个JS对象得到变化的部分，然后把这个差异应用到原来的Dom树上，从而达到更新UI的目的，这就是“数据驱动”的原理。\n不就是虚拟dom+diff算法嘛。\n在渲染层，宿主环境会把WXML转化成对应的JS对象，在逻辑层发生数据变更的时候，我们需要通过宿主环境提供的setData方法把数据从逻辑层传递到渲染层，再经过对比前后差异，把差异应用在原来的Dom树上，渲染出正确的UI界面")]),a._v(" "),e("h2",{attrs:{id:"app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#app","aria-hidden":"true"}},[a._v("#")]),a._v(" App()")]),a._v(" "),e("p",[a._v("宿主环境提供了 App() 构造器用来注册一个程序App，需要留意的是App() 构造器必须写在项目根目录的app.js里，App实例是单例对象，在其他JS脚本中可以使用宿主环境提供的 getApp() 来获取程序实例")]),a._v(" "),e("h2",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期","aria-hidden":"true"}},[a._v("#")]),a._v(" 生命周期")]),a._v(" "),e("h2",{attrs:{id:"全局数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局数据","aria-hidden":"true"}},[a._v("#")]),a._v(" 全局数据")]),a._v(" "),e("p",[a._v("小程序的JS脚本是运行在JsCore的线程里，小程序的每个页面各自有一个WebView线程进行渲染，所以小程序切换页面时，小程序逻辑层的JS脚本运行上下文依旧在同一个JsCore线程中。")]),a._v(" "),e("h2",{attrs:{id:"双线程模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#双线程模型","aria-hidden":"true"}},[a._v("#")]),a._v(" 双线程模型")]),a._v(" "),e("ul",[e("li",[a._v("架构要求：就是要快，包括要渲染快、加载快等。")]),a._v(" "),e("li",[a._v("技术选型：\n"),e("ol",[e("li",[a._v("纯客户端原生")]),a._v(" "),e("li",[a._v("纯Web")]),a._v(" "),e("li",[a._v("结合1跟2，Hybrid √")])])]),a._v(" "),e("li",[a._v("理由：管控，安全")]),a._v(" "),e("li",[a._v("缺点：双线程带来天生的时延")])]),a._v(" "),e("h2",{attrs:{id:"组件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件系统","aria-hidden":"true"}},[a._v("#")]),a._v(" 组件系统")]),a._v(" "),e("ul",[e("li",[a._v("Exparser：")])]),a._v(" "),e("h2",{attrs:{id:"性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能","aria-hidden":"true"}},[a._v("#")]),a._v(" 性能")]),a._v(" "),e("ul",[e("li",[a._v("启动：缓存，更新，加载（所有app.js、页面所在的JS文件和所有其他被require的JS文件会被自动执行一次，小程序基础库会完成所有页面的注册）。")]),a._v(" "),e("li",[a._v("分包加载：小程序的代码包可以被划分为几个：一个是“主包”，包含小程序启动时会马上打开的页面代码和相关资源；其余是“分包”，包含其余的代码和资源。这样，小程序启动时，只需要先将主包下载完成，就可以立刻启动小程序。\n提高小程序的渲染性能：每次只设置setData需要改变的最小单位数据。每次设置的数据不应超过1024kB。")]),a._v(" "),e("li",[a._v("setData工作原理：当前，视图层和逻辑层的数据传输，实际上通过两边提供的 evaluateJavascript 所实现。即用户传输的数据，需要将其转换为字符串形式传递，同时把转换后的数据内容拼接成一份 JS 脚本，再通过执行 JS 脚本的形式传递到两边独立环境。而 evaluateJavascript 的执行会受很多方面的影响，数据到达视图层并不是实时的。")]),a._v(" "),e("li",[a._v("错误示范:频繁，大量，后台态。")]),a._v(" "),e("li",[a._v("图片：对内存，对页面切换")]),a._v(" "),e("li",[a._v("精简代码")])])])}],!1,null,null,null);v.options.__file="README.md";t.default=v.exports}}]);