(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{229:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket","aria-hidden":"true"}},[e._v("#")]),e._v(" WebSocket")]),e._v(" "),a("blockquote",[a("p",[e._v("WebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。\nWebSocket 使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。")])]),e._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),a("ul",[a("li",[e._v("readyState:\n"),a("ul",[a("li",[e._v("0:表示连接尚未建立。")]),e._v(" "),a("li",[e._v("1:表示连接已建立，可以进行通信。")]),e._v(" "),a("li",[e._v("2:表示连接正在进行关闭。")]),e._v(" "),a("li",[e._v("3:表示连接已经关闭或者连接不能打开。")])])]),e._v(" "),a("li",[e._v("bufferedAmount: 只读，已被 send() 放入正在队列中等待传输，但是还没有发出的 UTF-8 文本字节数。")])]),e._v(" "),a("h2",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),a("ul",[a("li",[e._v("open")]),e._v(" "),a("li",[e._v("message")]),e._v(" "),a("li",[e._v("error")]),e._v(" "),a("li",[e._v("close")])]),e._v(" "),a("h2",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例","aria-hidden":"true"}},[e._v("#")]),e._v(" 实例")]),e._v(" "),a("blockquote",[a("p",[e._v('为了建立一个 WebSocket 连接，客户端浏览器首先要向服务器发起一个 HTTP 请求，这个请求和通常的 HTTP 请求不同，包含了一些附加头信息，其中附加头信息"Upgrade: WebSocket"表明这是一个申请协议升级的 HTTP 请求，服务器端解析这些附加的头信息然后产生应答信息返回给客户端，客户端和服务器端的 WebSocket 连接就建立起来了，双方就可以通过这个连接通道自由的传递信息，并且这个连接会持续存在直到客户端或者服务器端的某一方主动的关闭连接。')])])])}],!1,null,null,null);s.options.__file="web-socket.md";t.default=s.exports}}]);